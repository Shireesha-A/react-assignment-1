{"version":3,"sources":["components/latestnews.js","App.js","serviceWorker.js","index.js"],"names":["ss","Fragment","Jumbotron","className","href","Table","class","Image","src","id","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfe0c17c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Jumbotron} from 'react-bootstrap';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Image} from 'react-bootstrap';\r\nimport './meta.css';\r\n\r\nclass ss extends Component {\r\n    render() {\r\n      return(\r\n      <React.Fragment>\r\n       <Jumbotron className=\"container meta1\">\r\n              <div>\r\n                <h1> Meta Weather API</h1>\r\n                <p>MetaWeather provides an API that delivers JSON over HTTPS for access to our data.</p>\r\n                <p><a href=\"#\">Drop me an email</a> if you're going to make more than maybe a request a minute to this.\r\n                    We also ask that you link back to <a href=\"#\">MetaWeather.com</a> where appropriate, \r\n                    in a sensible way that's useful to the user.</p>\r\n              </div>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container tab1\">\r\n        <Table class=\"table1\">\r\n            <p><b>Weather States</b></p>\r\n            <tr>\r\n                <th >Name</th>\r\n                <th>Abbreviation</th>\r\n                <th>Icon</th>\r\n            </tr>\r\n            <tr>\r\n                <td>Sleet</td>\r\n                <td>sl</td>\r\n                <td class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/sn.svg\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Hail</td>\r\n                <td>h</td>\r\n                <td class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/sl.svg\" /></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Thunderstorm</td>\r\n                <td>t</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/h.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Heavy Rain</td>\r\n                <td>hr</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/t.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Light Rain</td>\r\n                <td>lr</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/hr.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Showers</td>\r\n                <td>s</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/s.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Heavy Cloud</td>\r\n                <td>hc</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/hc.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Light Cloud</td>\r\n                <td>lc</td>\r\n                <td  class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/lc.svg\"></Image></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Clear</td>\r\n                <td>c</td>\r\n                <td   class=\"img\"><Image src=\"https://www.metaweather.com/static/img/weather/c.svg\"></Image></td>\r\n            </tr>\r\n            \r\n\r\n        </Table>\r\n        </Jumbotron>\r\n        <Jumbotron className=\" container meta2\">\r\n            <h3>Icons</h3>\r\n            <p>Feel free to hotlink these images. Replace \"X\" in the table below with the weather state\r\n                 abbreviation.</p>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container tab2\">\r\n        <Table class=\"table2\">\r\n            <tr>\r\n                <th >Type</th>\r\n                <th>URL</th>\r\n                <th>Example</th>\r\n            </tr>\r\n            <tr>\r\n                <td>SVG (preferred)</td>\r\n                <td>/static/img/weather/X.svg</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>ICO</td>\r\n                <td>/static/img/weather/ico/X.ico</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>PNG (600x600 px)</td>\r\n                <td>/static/img/weather/png/X.png</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>PNG (64x64 px)</td>\r\n                <td>/static/img/weather/png/64/X.png</td>\r\n                <td></td>\r\n            </tr>\r\n        </Table>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container meta3\">\r\n            <h2>Methods</h2>\r\n            <p><a href=\"#\">Location Search</a></p>\r\n            <p>Find a location</p>\r\n            <p><a href=\"#\">Location</a></p>\r\n            <p>Location information, and a 5 day forecast</p>\r\n            <p><a href=\"#\">Location Day</a></p>\r\n            <p>Source information and forecast history for a particular day & location</p>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container meta4\">\r\n            <h4>Location Search</h4>\r\n            <h4>URL</h4>\r\n            <a href=\"#\">/api/location/search/?query=(query)  /api/location/search/?lattlong=(latt),(long)</a>\r\n            <h5>Arguments</h5>\r\n            <p>Either query or lattlong need to be present.</p>\r\n            <h5>query</h5>\r\n            <p>Text to search for.</p>\r\n            <h5>lattlong</h5>\r\n            <p>Coordinates to search for locations near. Comma separated lattitude and longitude e.g.\r\n                 \"36.96,-122.0\"</p>\r\n            <h5>Examples</h5>\r\n            <a href=\"#\">/api/location/search/?query=san </a>\r\n            <a href=\"#\">/api/location/search/?query=london</a>\r\n            <a href=\"#\">/api/location/search/?lattlong=36.96,-122.02</a>\r\n            <a href=\"#\">/api/location/search/?lattlong=50.068,-5.316</a>\r\n            <h4>Response Fields</h4>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container tab3\">\r\n        <Table class=\"table3\">\r\n            <tr>\r\n                <th >Field</th>\r\n                <th>Type</th>\r\n                <th>Unit</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td>title</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Name of the location</td>\r\n            </tr>\r\n            <tr>\r\n                <td>location_type</td>\r\n                <td>string</td>\r\n                <td>(City|Region / State / Province|Country|Continent)</td>\r\n                <td></td>\r\n                \r\n            </tr>\r\n            <tr>\r\n                <td>latt_long</td>\r\n                <td>floats, comma separated</td>\r\n                <td></td> \r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>woeid</td>\r\n                <td></td>\r\n                <td>integer</td>\r\n                <td>Where On Earth ID</td>\r\n            </tr>\r\n            <tr>\r\n                <td>distance</td>\r\n                <td>integer</td>\r\n                <td>Metres</td>\r\n                <td>Only returned on a lattlong search</td>\r\n            </tr>\r\n        </Table>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container meta5\">\r\n            <h4>Location </h4>\r\n            <h4>URL</h4>\r\n            <a href=\"#\">/api/location/(woeid)/(date)/</a>\r\n            <h5>Arguments</h5>\r\n            <h5>woeid</h5>\r\n            <p>Where On Earth ID. <a href=\"#\">Docs</a></p>\r\n            \r\n            <h5>Examples</h5>\r\n            <p><a href=\"#\">/api/location/44418/2013/4/27/ </a>- London on a 27th Apr 2013</p>\r\n            <p><a href=\"#\">/api/location/2487956/2013/4/30/</a> - San Francisco on 30th April 2013</p>\r\n            \r\n        </Jumbotron>\r\n        <Jumbotron className=\"container tab4\">\r\n        <Table class=\"table4\">\r\n            <tr>\r\n                <th >Field</th>\r\n                <th>Type</th>\r\n                <th>Unit</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td>title</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Name of the Location</td>\r\n            </tr>\r\n            <tr>\r\n                <td>location_type</td>\r\n                <td>string</td>\r\n                <td>(City|Region / State / Province|Country|Continent)</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>latt_long</td>\r\n                <td>floats, comma separated</td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>time</td>\r\n                <td>datetime</td>\r\n                <td></td>\r\n                <td>Time in location</td>\r\n            </tr>\r\n            <tr>\r\n                <td>sun_(rise|set)</td>\r\n                <td>datetime</td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>timezone_name)</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Name of the timezone that the location is in</td>\r\n            </tr>\r\n            <tr id=\"pa\">\r\n                <td >parent</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>title </td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Name of the parent location</td>\r\n            </tr>\r\n            <tr>\r\n                <td>location_type</td>\r\n                <td>string</td>\r\n                <td>(City|Region / State / Province|Country|Continent)</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>latt</td>\r\n                <td>floats, comma separated</td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>woeid</td>\r\n                <td>integer</td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr id=\"co\">\r\n                <td>consolidated_weather</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>id</td>\r\n                <td>integer</td>\r\n                <td></td>\r\n                <td>Internal identifier for the forecast</td>\r\n            </tr>\r\n            <tr>\r\n                \r\n                <td>applicable_date</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Date that the forecast or observation pertains to</td>\r\n            </tr>\r\n            <tr>\r\n                \r\n                <td>weather_state_name</td>\r\n                <td>date</td>\r\n                <td></td>\r\n                <td>Text description of the weather state</td>\r\n            </tr>\r\n            <tr>\r\n                \r\n                <td>weather_state_abbr</td>\r\n                <td>string</td>\r\n                <td></td>\r\n\r\n                <td>One or two letter abbreviation of the weather state</td>\r\n            </tr>\r\n            <tr>\r\n                <td>wind_speed</td>\r\n                <td>float</td>\r\n                <td>mph</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>wind_direction</td>\r\n                <td>float</td>\r\n                <td>degrees</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>wind_direction_compass</td>\r\n                <td>string</td>\r\n                <td>compass point</td>\r\n                <td>Compass point of the wind direction</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>air_pressure</td>\r\n                <td>float</td>\r\n                <td>mbar</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>visibility</td>\r\n                <td>float</td>\r\n                <td>miles</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>predictability</td>\r\n                <td>integer</td>\r\n                <td>percentage</td>\r\n                <td>Our interpretation of the level to which the forecasters agree with each other - 100% being a complete consensus.</td>\r\n            </tr>\r\n            <tr  id=\"so\">\r\n                <td >sources</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>title</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>Name of the source</td>\r\n            </tr>\r\n            <tr>\r\n                <td>url</td>\r\n                <td>string</td>\r\n                <td></td>\r\n                <td>url of the source</td>\r\n            </tr>\r\n        </Table>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"container meta6\">\r\n            <h4>Location Day</h4>\r\n            <h4>URL</h4>\r\n            <a href=\"#\" id=\"a1\">/api/location/(woeid)/(date)/</a>\r\n            <h5>Arguments</h5>\r\n            <h5>woeid</h5>\r\n            <p>Where On Earth ID. <a href=\"#\">Docs</a></p>\r\n            <h5>date</h5>\r\n            <p>Date in the format yyyy/mm/dd. Most location have data from early 2013 to 5-10 days in the future.</p>\r\n            <h5>Examples</h5>\r\n            <p><a href=\"#\"id=\"a2\">/api/location/44418/2013/4/27/ </a>- London on a 27th Apr 2013</p>\r\n            <p><a href=\"#\" id=\"a3\">/api/location/2487956/2013/4/30/</a> - San Francisco on 30th April 2013</p>\r\n            <h5>Response Fields</h5>\r\n            <p>Returns a date ordered list of fields as described in the consolidated_weather section of the location method</p>\r\n        </Jumbotron>\r\n       </React.Fragment>\r\n      );\r\n      }\r\n    }\r\nexport default ss;","import React ,{Component}from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Meta from './components/latestnews';\nimport './App.css';\n\nclass App extends Component{\n  render(){\n    return(\n      /*<BrowserRouter>\n      <div className=\"App\">\n      \n        <Route\n                    path=\"/\"\n                    component={Covid}\n                    exact \n                />\n                <Route\n                    path=\"/dashboard\"\n                    component={Meta} \n                />\n      </div>\n      </BrowserRouter>*/\n      <div className=\"App\">\n        <Meta/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}